# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /helloworld/test/nihao:
        post:
            tags:
                - Greeter
            operationId: Greeter_SayNihHao
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/helloworld.v1.NiHaoRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/helloworld.v1.Reply'
    /helloworld/{name}:
        get:
            tags:
                - Greeter
            description: Sends a greeting
            operationId: Greeter_SayHello
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/helloworld.v1.HelloReply'
    /user:
        get:
            tags:
                - User
            operationId: User_GetUser
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.helloworld.v1.GetUserReply'
    /user/add:
        post:
            tags:
                - User
            operationId: User_CreateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.helloworld.v1.CreateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.helloworld.v1.CreateUserReply'
    /user/del:
        post:
            tags:
                - User
            operationId: User_DeleteUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.helloworld.v1.DeleteUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.helloworld.v1.DeleteUserReply'
    /user/list:
        get:
            tags:
                - User
            operationId: User_ListUser
            parameters:
                - name: status
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.helloworld.v1.ListUserReply'
    /user/update:
        post:
            tags:
                - User
            operationId: User_UpdateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.helloworld.v1.UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.helloworld.v1.UpdateUserReply'
components:
    schemas:
        api.helloworld.v1.CreateUserReply:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.helloworld.v1.CreateUserRequest'
        api.helloworld.v1.CreateUserRequest:
            type: object
            properties:
                name:
                    type: string
                passd:
                    type: string
                email:
                    type: string
        api.helloworld.v1.DeleteUserReply:
            type: object
            properties: {}
        api.helloworld.v1.DeleteUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
        api.helloworld.v1.GetUserReply:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/api.helloworld.v1.CreateUserRequest'
        api.helloworld.v1.ListUserReply:
            type: object
            properties:
                userList:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.helloworld.v1.CreateUserRequest'
        api.helloworld.v1.UpdateUserReply:
            type: object
            properties: {}
        api.helloworld.v1.UpdateUserRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                date:
                    $ref: '#/components/schemas/api.helloworld.v1.CreateUserRequest'
        helloworld.v1.HelloReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
        helloworld.v1.NiHaoRequest:
            type: object
            properties:
                name:
                    type: string
        helloworld.v1.Reply:
            type: object
            properties:
                message:
                    type: string
tags:
    - name: Greeter
      description: The greeting service definition.
    - name: User
