# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: AdminUser API
    version: 0.0.1
paths:
    /admin/add:
        get:
            tags:
                - AdminUser
            operationId: AdminUser_AdminAdd
            parameters:
                - name: password
                  in: query
                  description: optional string email = 1 [(gogoproto.jsontag) = "Email"];
                  schema:
                    type: string
                - name: name
                  in: query
                  schema:
                    type: string
                - name: status
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.adminuser.v1.UserRequest'
    /admin/list:
        get:
            tags:
                - AdminUser
            description: Sends a greeting
            operationId: AdminUser_AdminList
            parameters:
                - name: status
                  in: query
                  schema:
                    type: integer
                    format: int64
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.adminuser.v1.AdminListReply'
    /front/info:
        post:
            tags:
                - AdminUser
            operationId: AdminUser_FrontedInfo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.adminuser.v1.FrontedInfoRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.adminuser.v1.ReplyFrontedInfo'
    /front/login:
        post:
            tags:
                - AdminUser
            description: fronted
            operationId: AdminUser_FrontedLogin
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.adminuser.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.adminuser.v1.RegisterReply'
    /front/register:
        post:
            tags:
                - AdminUser
            operationId: AdminUser_FrontedRegister
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.adminuser.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.adminuser.v1.RegisterReply'
    /front/reset:
        post:
            tags:
                - AdminUser
            operationId: AdminUser_FrontedReset
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.adminuser.v1.UserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.adminuser.v1.UserRequest'
components:
    schemas:
        api.adminuser.v1.Admin:
            type: object
            properties:
                email:
                    type: string
                name:
                    type: string
                status:
                    type: integer
                    format: int64
        api.adminuser.v1.AdminListReply:
            type: object
            properties:
                adminList:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.adminuser.v1.Admin'
        api.adminuser.v1.FrontedInfoRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
        api.adminuser.v1.LoginRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                name:
                    type: string
                password:
                    type: string
                email:
                    type: string
        api.adminuser.v1.RegisterReply:
            type: object
            properties:
                code:
                    type: string
                info:
                    $ref: '#/components/schemas/api.adminuser.v1.ReplyFrontedInfo'
                token:
                    type: string
        api.adminuser.v1.ReplyFrontedInfo:
            type: object
            properties:
                email:
                    type: string
                name:
                    type: string
                createdAt:
                    type: integer
                    format: int64
                coin:
                    type: integer
                    format: int64
        api.adminuser.v1.UserRequest:
            type: object
            properties:
                password:
                    type: string
                    description: optional string email = 1 [(gogoproto.jsontag) = "Email"];
                name:
                    type: string
                status:
                    type: integer
                    format: int64
tags:
    - name: AdminUser
